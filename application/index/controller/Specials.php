<?php

namespace app\index\controller;

use app\index\model\Lantern;
use think\Controller;
use think\Db;
use app\index\model\Special;
use app\index\model\Brand;

class Specials extends Controller
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('active_type', "special");

        if(empty(session("admin_user_id"))){
            $url="/myadmin";
            Header("Location: $url");
            exit;
        }
    }

    public function special_list()
    {
        $specialModel = new Special;
        $list = $specialModel->join("brand","brand.brand_id=special.brand_id")->paginate(20, false, [
            'var_page' => 'page\Page',
            'list_rows' => 20,
        ]);



        $page = $list->render();
        $this->assign('list', $list);
        $this->assign('page', $page);
        return $this->fetch('special/special_index.html');

    }


    /**
     * @Description:添加加载
     * @author:lizx
     * @date:2017年12月2日
     */
    public function special_add()
    {

        $brandModel = new Brand;
        $brandList = $brandModel->select();

        $this->assign('brandList', $brandList);
        return $this->fetch('special/special_add.html');
    }


    /**
     * @Description:添加加载
     * @author:lizx
     * @date:2017年12月2日
     */
    public function special_save()
    {
        $grand_id = $this->request->param("brand_id");
        $special_name = $this->request->param("special_name");

        $bool = Db::table('special')->insert(array("brand_id" => $grand_id, "special_name" => $special_name, "create_time" => date("Y-m-d H:i:s")));
        if ($bool) {
            echo json_encode(array("type" => true,"msg"=>"添加成功"));
        } else {
            echo json_encode(array("type" => false,"msg"=>"失败成功"));
        }
    }

    /**
     * @Description:修改加载
     * @author:lizx
     * @date:2017年12月2日
     */
    public function special_load()
    {
        $special_id= $_REQUEST["special_id"];
        $special_data = Db::table('special')->where(array("special_id" => $special_id))->find();
        $this->assign('special_data', $special_data);


        $brandModel = new Brand;
        $brandList = $brandModel->select();

        $this->assign('brandList', $brandList);
        return $this->fetch('special/special_load.html');

    }


    /**
     * @Description:修改更新
     * @author:lizx
     * @date:2017年12月2日
     */
    public function special_update()
    {
        $special_id = $_REQUEST["special_id"];
        $special_name = $_REQUEST["special_name"];
        $brand_id = $_REQUEST["brand_id"];
        $bool = Db::table('special')->where(array("special_id" => $special_id))->update(array("brand_id" => $brand_id, "special_name" => $special_name));
        if ($bool) {
            echo json_encode(array("type" => true,"msg"=>"修改成功"));
        } else {
            echo json_encode(array("type" => false,"msg"=>"修改成功"));
        }
    }



    /**
     * @Description:删除
     * @author:lizx
     * @date:2017年12月2日
     */
    public function special_delete()
    {
        $special_id = $_REQUEST["special_id"];
        $lanterns = Db::table('lantern')->where(array("special_id" => $special_id))->select();
        if (!empty($lanterns)) {
            echo json_encode(array("type" => false,"msg"=>"存在已有灯具，请先删除灯具后再删除该类型"));
        } else {
            $bool = Db::table('special')->where(array("special_id" => $special_id))->delete();
            if($bool){
                echo json_encode(array("type" => true,"msg"=>"删除成功"));
            }else{
                echo json_encode(array("type" => true,"msg"=>"删除失败"));
            }

        }
    }

}
